from telethon import events
import os
import speech_recognition as sr
from pydub import AudioSegment
import asyncio

async def setup(client):
    @client.on(events.NewMessage(pattern=r'\.–∞—É–¥–∏–æ'))
    async def audio_handler(event):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –º–µ–Ω—è
        if event.sender_id != (await client.get_me()).id:
            return

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
        try:
            await event.delete()
        except:
            pass

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º reply
        if not event.is_reply:
            status_msg = await event.reply("üö´ –û—Ç–≤–µ—Ç—å—Ç–µ `.–∞—É–¥–∏–æ` –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ/–∫—Ä—É–∂–æ–∫")
            await asyncio.sleep(3)
            await status_msg.delete()
            return

        reply_msg = await event.get_reply_message()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if not (reply_msg.voice or reply_msg.video_note):
            status_msg = await event.reply("‚ùå –≠—Ç–æ –Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏ –Ω–µ –∫—Ä—É–∂–æ–∫!")
            await asyncio.sleep(3)
            await status_msg.delete()
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await event.reply("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∞—É–¥–∏–æ...")

        try:
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
            file_path = await reply_msg.download_media()
            await processing_msg.edit("üîß –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ WAV...")
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
            audio = AudioSegment.from_file(file_path)
            wav_path = "temp_audio.wav"
            audio.export(wav_path, format="wav")
            
            # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
            await processing_msg.edit("üé§ –†–∞—Å–ø–æ–∑–Ω–∞—é —Ä–µ—á—å...")
            recognizer = sr.Recognizer()
            with sr.AudioFile(wav_path) as source:
                audio_data = recognizer.record(source)
                text = recognizer.recognize_google(audio_data, language="ru-RU")
            
            # –†–µ–∑—É–ª—å—Ç–∞—Ç
            await processing_msg.delete()
            result_msg = await event.reply(f"üîä –†–µ–∑—É–ª—å—Ç–∞—Ç:\n`{text}`")
            
        except sr.UnknownValueError:
            await processing_msg.edit("‚ùå –†–µ—á—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")
            await asyncio.sleep(3)
            await processing_msg.delete()
        except Exception as e:
            await processing_msg.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
            await asyncio.sleep(5)
            await processing_msg.delete()
        finally:
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            for path in [file_path, wav_path]:
                if path and os.path.exists(path):
                    os.remove(path)
print("–ú–æ–¥—É–ª—å –∑–∞–ø—É—â–µ–Ω!(.–∞—É–¥–∏–æ)")